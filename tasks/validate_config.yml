# SPDX-FileCopyrightText: 2023 Slavi Pantaleev
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---

- name: Fail if required Miniflux settings not defined
  ansible.builtin.fail:
    msg: >
      You need to define a required configuration setting (`{{ item.name }}`).
  when: "item.when | bool and vars[item.name] | length == 0"
  with_items:
    - {'name': 'miniflux_identifier', when: true}
    - {'name': 'miniflux_uid', when: true}
    - {'name': 'miniflux_gid', when: true}
    - {'name': 'miniflux_hostname', when: true}
    - {'name': 'miniflux_path_prefix', when: true}
    - {'name': 'miniflux_container_network', when: true}
    - {'name': 'miniflux_database_hostname', when: true}
    - {'name': 'miniflux_database_password', when: true}
    - {'name': 'miniflux_container_labels_traefik_compression_middleware_name', when: "{{ miniflux_container_labels_traefik_compression_middleware_enabled }}"}

- when: miniflux_container_labels_traefik_enabled | bool
  block:
    - name: Fail if required Miniflux Traefik settings not defined
      ansible.builtin.fail:
        msg: >-
          You need to define a required configuration setting (`{{ item }}`).
      when: "vars[item] == ''"
      with_items:
        - miniflux_container_labels_traefik_hostname
        - miniflux_container_labels_traefik_path_prefix

    # We ensure it doesn't end with a slash, because we handle both (slash and no-slash).
    # Knowing that `miniflux_container_labels_traefik_path_prefix` does not end with a slash
    # ensures we know how to set these routes up without having to do "does it end with a slash" checks elsewhere.
    - name: Fail if miniflux_container_labels_traefik_path_prefix ends with a slash
      ansible.builtin.fail:
        msg: >-
          miniflux_container_labels_traefik_path_prefix (`{{ miniflux_container_labels_traefik_path_prefix }}`) must either be `/` or not end with a slash (e.g. `/miniflux`).
      when: "miniflux_container_labels_traefik_path_prefix != '/' and miniflux_container_labels_traefik_path_prefix[-1] == '/'"
